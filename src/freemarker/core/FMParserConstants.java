/* Generated By:JavaCC: Do not edit this line. FMParserConstants.java */
package freemarker.core;

public interface FMParserConstants {

  int EOF = 0;
  int BLANK = 1;
  int START_TAG = 2;
  int END_TAG = 3;
  int CLOSE_TAG1 = 4;
  int CLOSE_TAG2 = 5;
  int ATTEMPT = 6;
  int RECOVER = 7;
  int IF = 8;
  int ELSE_IF = 9;
  int LIST = 10;
  int ITEMS = 11;
  int SEP = 12;
  int FOREACH = 13;
  int SWITCH = 14;
  int CASE = 15;
  int ASSIGN = 16;
  int GLOBALASSIGN = 17;
  int LOCALASSIGN = 18;
  int _INCLUDE = 19;
  int IMPORT = 20;
  int FUNCTION = 21;
  int MACRO = 22;
  int TRANSFORM = 23;
  int VISIT = 24;
  int STOP = 25;
  int RETURN = 26;
  int CALL = 27;
  int SETTING = 28;
  int COMPRESS = 29;
  int COMMENT = 30;
  int TERSE_COMMENT = 31;
  int NOPARSE = 32;
  int END_IF = 33;
  int END_LIST = 34;
  int END_ITEMS = 35;
  int END_SEP = 36;
  int END_RECOVER = 37;
  int END_ATTEMPT = 38;
  int END_FOREACH = 39;
  int END_LOCAL = 40;
  int END_GLOBAL = 41;
  int END_ASSIGN = 42;
  int END_FUNCTION = 43;
  int END_MACRO = 44;
  int END_COMPRESS = 45;
  int END_TRANSFORM = 46;
  int END_SWITCH = 47;
  int ELSE = 48;
  int BREAK = 49;
  int SIMPLE_RETURN = 50;
  int HALT = 51;
  int FLUSH = 52;
  int TRIM = 53;
  int LTRIM = 54;
  int RTRIM = 55;
  int NOTRIM = 56;
  int DEFAUL = 57;
  int SIMPLE_NESTED = 58;
  int NESTED = 59;
  int SIMPLE_RECURSE = 60;
  int RECURSE = 61;
  int FALLBACK = 62;
  int ESCAPE = 63;
  int END_ESCAPE = 64;
  int NOESCAPE = 65;
  int END_NOESCAPE = 66;
  int UNIFIED_CALL = 67;
  int UNIFIED_CALL_END = 68;
  int FTL_HEADER = 69;
  int TRIVIAL_FTL_HEADER = 70;
  int UNKNOWN_DIRECTIVE = 71;
  int STATIC_TEXT_WS = 72;
  int STATIC_TEXT_NON_WS = 73;
  int STATIC_TEXT_FALSE_ALARM = 74;
  int DOLLAR_INTERPOLATION_OPENING = 75;
  int HASH_INTERPOLATION_OPENING = 76;
  int WHITESPACE = 77;
  int ESCAPED_CHAR = 84;
  int STRING_LITERAL = 85;
  int UNCLOSED_STRING_LITERAL = 86;
  int RAW_STRING = 87;
  int FALSE = 88;
  int TRUE = 89;
  int INTEGER = 90;
  int DECIMAL = 91;
  int DOT = 92;
  int DOT_DOT = 93;
  int DOT_DOT_LESS = 94;
  int DOT_DOT_ASTERISK = 95;
  int BUILT_IN = 96;
  int EXISTS = 97;
  int EQUALS = 98;
  int DOUBLE_EQUALS = 99;
  int NOT_EQUALS = 100;
  int PLUS_EQUALS = 101;
  int MINUS_EQUALS = 102;
  int TIMES_EQUALS = 103;
  int DIV_EQUALS = 104;
  int MOD_EQUALS = 105;
  int PLUS_PLUS = 106;
  int MINUS_MINUS = 107;
  int LESS_THAN = 108;
  int LESS_THAN_EQUALS = 109;
  int ESCAPED_GT = 110;
  int ESCAPED_GTE = 111;
  int PLUS = 112;
  int MINUS = 113;
  int TIMES = 114;
  int DOUBLE_STAR = 115;
  int ELLIPSIS = 116;
  int DIVIDE = 117;
  int PERCENT = 118;
  int AND = 119;
  int OR = 120;
  int EXCLAM = 121;
  int COMMA = 122;
  int SEMICOLON = 123;
  int COLON = 124;
  int OPEN_BRACKET = 125;
  int CLOSE_BRACKET = 126;
  int OPEN_PAREN = 127;
  int CLOSE_PAREN = 128;
  int OPENING_CURLY_BRACKET = 129;
  int CLOSING_CURLY_BRACKET = 130;
  int IN = 131;
  int AS = 132;
  int USING = 133;
  int ID = 134;
  int OPEN_MISPLACED_INTERPOLATION = 135;
  int NON_ESCAPED_ID_START_CHAR = 136;
  int ESCAPED_ID_CHAR = 137;
  int ID_START_CHAR = 138;
  int ASCII_DIGIT = 139;
  int DIRECTIVE_END = 140;
  int EMPTY_DIRECTIVE_END = 141;
  int NATURAL_GT = 142;
  int NATURAL_GTE = 143;
  int TERMINATING_WHITESPACE = 144;
  int TERMINATING_EXCLAM = 145;
  int TERSE_COMMENT_END = 146;
  int MAYBE_END = 147;
  int KEEP_GOING = 148;
  int LONE_LESS_THAN_OR_DASH = 149;

  int DEFAULT = 0;
  int NODIRECTIVE = 1;
  int FM_EXPRESSION = 2;
  int IN_PAREN = 3;
  int NAMED_PARAMETER_EXPRESSION = 4;
  int EXPRESSION_COMMENT = 5;
  int NO_SPACE_EXPRESSION = 6;
  int NO_PARSE = 7;

  String[] tokenImage = {
    "<EOF>",
    "<BLANK>",
    "<START_TAG>",
    "<END_TAG>",
    "<CLOSE_TAG1>",
    "<CLOSE_TAG2>",
    "<ATTEMPT>",
    "<RECOVER>",
    "<IF>",
    "<ELSE_IF>",
    "<LIST>",
    "<ITEMS>",
    "<SEP>",
    "<FOREACH>",
    "<SWITCH>",
    "<CASE>",
    "<ASSIGN>",
    "<GLOBALASSIGN>",
    "<LOCALASSIGN>",
    "<_INCLUDE>",
    "<IMPORT>",
    "<FUNCTION>",
    "<MACRO>",
    "<TRANSFORM>",
    "<VISIT>",
    "<STOP>",
    "<RETURN>",
    "<CALL>",
    "<SETTING>",
    "<COMPRESS>",
    "<COMMENT>",
    "<TERSE_COMMENT>",
    "<NOPARSE>",
    "<END_IF>",
    "<END_LIST>",
    "<END_ITEMS>",
    "<END_SEP>",
    "<END_RECOVER>",
    "<END_ATTEMPT>",
    "<END_FOREACH>",
    "<END_LOCAL>",
    "<END_GLOBAL>",
    "<END_ASSIGN>",
    "<END_FUNCTION>",
    "<END_MACRO>",
    "<END_COMPRESS>",
    "<END_TRANSFORM>",
    "<END_SWITCH>",
    "<ELSE>",
    "<BREAK>",
    "<SIMPLE_RETURN>",
    "<HALT>",
    "<FLUSH>",
    "<TRIM>",
    "<LTRIM>",
    "<RTRIM>",
    "<NOTRIM>",
    "<DEFAUL>",
    "<SIMPLE_NESTED>",
    "<NESTED>",
    "<SIMPLE_RECURSE>",
    "<RECURSE>",
    "<FALLBACK>",
    "<ESCAPE>",
    "<END_ESCAPE>",
    "<NOESCAPE>",
    "<END_NOESCAPE>",
    "<UNIFIED_CALL>",
    "<UNIFIED_CALL_END>",
    "<FTL_HEADER>",
    "<TRIVIAL_FTL_HEADER>",
    "<UNKNOWN_DIRECTIVE>",
    "<STATIC_TEXT_WS>",
    "<STATIC_TEXT_NON_WS>",
    "<STATIC_TEXT_FALSE_ALARM>",
    "\"${\"",
    "\"#{\"",
    "<WHITESPACE>",
    "<token of kind 78>",
    "<token of kind 79>",
    "\">\"",
    "\"]\"",
    "\"-\"",
    "<token of kind 83>",
    "<ESCAPED_CHAR>",
    "<STRING_LITERAL>",
    "<UNCLOSED_STRING_LITERAL>",
    "<RAW_STRING>",
    "\"false\"",
    "\"true\"",
    "<INTEGER>",
    "<DECIMAL>",
    "\".\"",
    "\"..\"",
    "<DOT_DOT_LESS>",
    "\"..*\"",
    "\"?\"",
    "\"??\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"++\"",
    "\"--\"",
    "<LESS_THAN>",
    "<LESS_THAN_EQUALS>",
    "<ESCAPED_GT>",
    "<ESCAPED_GTE>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"**\"",
    "\"...\"",
    "\"/\"",
    "\"%\"",
    "<AND>",
    "<OR>",
    "\"!\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"in\"",
    "\"as\"",
    "\"using\"",
    "<ID>",
    "<OPEN_MISPLACED_INTERPOLATION>",
    "<NON_ESCAPED_ID_START_CHAR>",
    "<ESCAPED_ID_CHAR>",
    "<ID_START_CHAR>",
    "<ASCII_DIGIT>",
    "\">\"",
    "<EMPTY_DIRECTIVE_END>",
    "\">\"",
    "\">=\"",
    "<TERMINATING_WHITESPACE>",
    "<TERMINATING_EXCLAM>",
    "<TERSE_COMMENT_END>",
    "<MAYBE_END>",
    "<KEEP_GOING>",
    "<LONE_LESS_THAN_OR_DASH>",
  };

}
